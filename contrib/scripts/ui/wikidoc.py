#!/usr/bin/env python
#
# @brief extract wiki documentation about behaviour from .h and .c files
# @license Public domain
# @return a MediaWiki document into stdout (http://ufoai.org/wiki/index.php/UI_node_behaviours)
# @todo generate confunc too
#

import os, os.path, sys
from ExtractNodeBehaviour import *

def genDoxygenContent(doc):
	result = ""

	for d in doc:
		if d.startswith("@todo"):
			result += '<div style="border:2px solid red;padding:2px;">' + d + '</div> '
		elif d.startswith("@image"):
			params = d.split(" ")
			image = params[2]
			if image.startswith("http://ufoai.org/wiki/images/"):
				image = image.replace("http://ufoai.org/wiki/images/", "")
				image = "[[Image:" + image + "|thumb]]"
				result = image + result
			else:
				result += "[" + image + " See image]."
		elif d.startswith("@file"):
			pass
		elif d.startswith("@brief"):
			text = d.replace("@brief", "", 1).strip()
			result += text + ' '
		elif d.startswith("@code"):
			code = d.replace("@code\n", "", 1)
			code = '\n<pre><nowiki>' + code + '</nowiki></pre>\n'
			result += code
		elif d.startswith("@"):
			result += '<div style="border:2px solid green;padding:2px;">' + d + '</div> '
		else:
			result += d + ' '
	return result

def genPropertyDoc(node, element):
	override = ""
	if element.override:
		prop = element.getSuperproperty()
		if prop != None:
			behaviour = prop.node
			override = " (override&nbsp;[[#" + behaviour.name + "]])"

	result = ""
	result += '|-\n'
	result += '| ' + element.name + override + ' || [[' + element.type + ']] || ' + genDoxygenContent(element.doc) + '\n'
	return result

def genPropertyTitle(title):
	result = ""
	result += '|-\n'
	result += '! colspan="3" | ' + title + '\n'
	result += '|-\n'
	result += '! width="25%" | Name\n'
	result += '! width="25%" | Type\n'
	result += '! width="50%" | Description\n'
	return result

def genBehaviourDoc(node):
	result = ""
	label = ""

	result += '== ' + node.name + ' ==\n'
	if node.extends != None:
		result += ':This node inherits [[#' + node.extends + ']]. Check this node for more properties.\n'

	if node.doc != "":
		result += genDoxygenContent(node.doc) + '\n'

	if len(node.properties) + len(node.methods) + len(node.confuncs) != 0:
		result += '\n'
		result += '{| class="ufotable" width="100%" \n'

		list = node.properties.keys()
		if len(list) != 0:
			result += genPropertyTitle("Properties")
			list.sort()
			for name in list:
				e = node.properties[name]
				result += genPropertyDoc(node, e)
				pass

		list = node.callbacks.keys()
		if len(list) != 0:
			result += genPropertyTitle("Callback event")
			list.sort()
			for name in list:
				e = node.callbacks[name]
				result += genPropertyDoc(node, e)
				pass

		list = node.methods.keys()
		if len(list) != 0:
			result += genPropertyTitle("Methods")
			list.sort()
			for name in list:
				e = node.methods[name]
				result += genPropertyDoc(node, e)
				pass

		list = node.confuncs.keys()
		if len(list) != 0:
			result += genPropertyTitle("Confunc")
			list.sort()
			for name in list:
				e = node.confuncs[name]
				result += genPropertyDoc(node, e)
				pass

		result += '|}\n'

	return result

def genDoc(package):
	result = ""
	list = package.getBehaviourNames()
	list.sort()
	result += """This page is '''autogenerated'''. Please do not edit it. Use the [[Talk:UI node behaviours|talk page]]
or update the source code and generate the wikicode it with <code>./contrib/scripts/ui/wikidoc.py</code>.\n"""
	result += "\n"
	for name in list:
		result += genBehaviourDoc(package.getBehaviour(name))
		result += "\n"
	result += "\n[[Category:GUIs]]"
	return result

def getDoc():
	extract = ExtractNodeBehaviour()
	package = extract.getPackage()
	return genDoc(package)

if __name__ == "__main__":
	print getDoc()
